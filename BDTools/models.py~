# Copyright (C) 2009 Instituto Nokia de Tecnologia. All rights reserved.
# Contact: Ian Lawrence ian.lawrence@openbossa.org
#
# This software, including documentation, is protected by copyright
# controlled by Instituto Nokia de Tecnologia. All rights are reserved.
# Copying, including reproducing, storing, adapting or translating, any
# or all of this material requires the prior written consent of
# Instituto Nokia de Tecnologia. This material also contains
# confidential information which may not be disclosed to others without
# the prior written consent of Instituto Nokia de Tecnologia.
#
#===========================================================================
#
# Django Framework models- database classes ian.lawrence@openbossa.org
#
#
#===========================================================================

from django.db import models

class Spreadsheet(models.Model):
    the_name_of_the_analysis = models.CharField(max_length=100)
    revenue_or_savings = models.DecimalField(max_digits=19, decimal_places=10)
    fixed_costs = models.DecimalField(max_digits=19, decimal_places=10)
    operational_costs = models.DecimalField(max_digits=19, decimal_places=10)
    IRR = models.DecimalField(max_digits=19, decimal_places=10)
    NPV = models.DecimalField(max_digits=19, decimal_places=10)
    IE = models.DecimalField(max_digits=19, decimal_places=10)
    remaining_expenses = models.DecimalField(max_digits=19, decimal_places=10)
    
    class Admin:
       pass

    def __unicode__(self):
       return self.the_opportunity_name
    


class BusinessCase(models.Model):
    project_name = models.CharField(max_length=100)
    opportunity = models.TextField(help_text="Names of Units and People")
    global_and_local_customers = models.TextField(help_text="Describe the problem, its scenario and specifics. Describe existing solutions and their strengths and weaknesses.")
    solution = models.TextField(help_text="Describe a solution to the problem and the scenario with specifics (technologies, structures, competences to run). Also add objectives and justifications, scope and out-of-scope items. Why is it unique? Describe what differentiates this solution when compared to any other.")
    constraints_premises_and_restrictions = models.TextField(help_text="Describe the constraints, premises and restrictions of the proposed solution which addresses the opportunity or problem. Describe also the time to market to make the solution feasible.")
    market_potential = models.TextField(help_text="Describe how the solution is going to drive revenue or savings, estimated contribution to Nokia volumes, contribution to Nokia business, etc. If possible also address the Project Value perspective. Describe business performance parameters.")
    strategic_alignment = models.TextField(help_text="Describe the components of cost - both to one-time and operational (recurring) expenses")
    tools_and_competencies = models.TextField(help_text="Describe the necessary tools (hardware, software, orgware) and competences to bring the solution to life. Describe also the INdT areas which can possibly develop the solution.")
    components_of_cost = models.TextField(help_text="Describe the components of cost - both to one-time and operational (recurring) expenses")
    resources = models.FileField(upload_to='resources/', max_length=200)
    
    
    class Admin:
       pass

    def __unicode__(self):
       return self.project_name
       

class BusinessModel(models.Model):
    business_model_name = models.CharField(max_length=100)  
    business_scenario = models.TextField(help_text="What is the Business Scenario?")
    tech_structure = models.TextField(help_text="What is the Tech Structure?")
    market_structure = models.TextField(help_text="What is the Market Structure?")
    what_is_needed_to_offer_this_solution = models.TextField(help_text="What is needed from INdT to offer this solution?")
    resources_and_competencies = models.TextField(help_text="What are the resources needed and the key competencies used")
    trends_and_market_movements = models.TextField(help_text="What are the trends and market movements?")
    
    class Admin:
       pass

    def __unicode__(self):
       return self.business_model_name
                                                                                                                                                                                                                                                                                                                                                                                                                                              
    
       
class BusinessPlan(models.Model): 
    business_plan_name = models.CharField(max_length=100)
    business_model_for_plan = models.ForeignKey(BusinessModel, related_name='Business Model',  help_text="The Business Model that this Business Plan relates to")
    business_potential_for_plan = models.ForeignKey(Spreadsheet, related_name='Business Potential',  help_text="The Business Potential/Spreadsheet for this Business Plan")
    business_case_for_plan = models.ForeignKey(BusinessCase, related_name='Business case',  help_text="The Business case for this Business Plan") 
    the_team = models.TextField(help_text="The Team") 
    competition = models.TextField(help_text="Assess the competition, not only in the segment, but also using the job-to-be-done approach.") 
    objectives_and_targets = models.TextField(help_text="Define and specific objectives that will be assessed (market share, revenue, benefits, etc) over a 3 year period")
    marketing_and_promotion = models.TextField(help_text="Tools to raise awareness of the solution and to promote its purchase")
    risk = models.TextField(help_text="The risk assessment") 
    
    class Admin:
       pass

    def __unicode__(self):
       return self.business_plan_name 
    
    

     
    

